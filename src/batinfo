#!/usr/bin/awk -f
# Copyright (c) 2023 Sebastian LaVine <mail@smlavine.com>
# SPDX-License-Identifier: MPL-2.0
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# batinfo
#	Reformats the output of acpi to be more concise.
#	See <https://git.sr.ht/~smlavine/dwmblocks>.

# The input is expected to look something like this:
# Battery 0: Discharging, 99%, 02:44:54 remaining

BEGIN {
	status = "?"
	while (status == "?") {
		"acpi" | getline

		if (length == 0) {
			break
		}

		if ($3 == "Charging,") {
			status = "CHR"
		} else if ($3 == "Discharging,") {
			status = "DRN"
		} else if ($3 == "Full,") {
			status = "FULL"
		} else {
			continue
		}
 
		# +0 forces numeric conversion; therefore truncates the
		# trailing "%," from $4 also.
		percentage = $4+0

		if (status == "DRN") {
			if (percentage <= 5) {
				# On very low percentage, we want the battery
				# info to flash yellow and red in the status
				# bar, switching on every second. We can create
				# this effect by setting the color to yellow or
				# red depending on whether the epoch time is
				# odd or even -- assuming that batinfo is
				# called by dwmblocks every second.
				#
				# According to the POSIX standard, srand() sets
				# the seed to the current time of day by
				# default, and then returns the seed on future
				# calls. This is more portable than the
				# GNU-specific systime() function, or
				# getline-ing from the GNU-specific `date +%s`
				# format.
				srand()
				color = (srand() % 2 == 0) ? "\3" : "\4"
			} else if (percentage <= 15) {
				# Set the output color to yellow in dwmblocks.
				color = "\3"
			}
		}

		if (length($5) == 0) {
			time = "?"
		} else if ($5 == "charging" || $5 == "discharging") {
			# This occurs for a second or two each time the power
			# cable is connected or disconnected.
			time = "..."
		} else {
			time = $5
			# Replace the first colon with an hour label.
			sub(":", "h", time)
			# Replace the second colon with a minute label,
			# and also get rid of the seconds field.
			sub(/:.*$/, "m", time)
		}

		print color percentage "% " time " " status
	}
	close("acpi")
}
