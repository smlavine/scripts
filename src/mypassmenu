#!/bin/sh
# Copyright (c) 2021 Sebastian LaVine <mail@smlavine.com>
# SPDX-License-Identifier: MPL-2.0
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# File:        mypassmenu
# Description: Opens a stylized dmenu prompt with passwords to select
#              from. Passwords are sorted according to the weight
#              value attached to them in $weights. Each time a
#              password is used, its weight increases by one, so that
#              over time the most used passwords take the least amount
#              of time to choose from the dmenu prompt.


# The directory containing the passwords.
passdir="${PASSWORD_STORE_DIR-~/.password-store}"

# File containing all expected password entries and their respective weights.
# Expected format (fields separated by tabs):
# logins/sr.ht/smlavine	59
# logins/aur.archlinux.org/smlavine	4	comment about this line
# logins/github.com/smlavine	0
weights="${MYPASSMENU_WEIGHTS-$XDG_DATA_HOME/mypassmenu.tsv}"

# File listing all passwords in the password store.
temp_pwlist="$(mktemp)"
find "$passdir" -name '*.gpg' | sed -e "s:^$passdir/::" -e 's/\.gpg$//' \
	> "$temp_pwlist"

# If an entry is in "$temp_pwlist" xor "$weights", then it has either been
# added to or removed from the password store since the last invocation.

cut -f1 "$weights" "$temp_pwlist" | sort | uniq -u | while read -r pw; do
	if grep -q "^$pw$" "$temp_pwlist"; then
		# If $pw is in the password list, then it is
		# a new password that has not yet been added to
		# the weight file.
		# Add it.
		printf '%s\t0\n' "$pw" >> "$weights"
	else
		# If $pw is not in the password list, then it
		# is a password that has been removed from pass
		# and not yet removed from the weight file.
		# Remove it.
		grep -v "^$pw	" "$weights" | sponge "$weights"
	fi
done

rm "$temp_pwlist"

pw="$(sort -rnk 2 "$weights" | cut -f1 | dmenu -i -c -fn 20 -sb '#b00' -l 30)"

pass show -c "$pw"

# Increment the weight of the password chosen.
# FIXME: deletes any comments after the weight amount
awk '$1 == "'"$pw"'" { print $1 "\t" $2+1; next } { print $0 }' "$weights" |
	sponge "$weights"
