#!/bin/sh
# Copyright (c) 2021 Sebastian LaVine <mail@smlavine.com>
# SPDX-License-Identifier: MPL-2.0
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# File:        touch-menu
# Description: Provide a menu to perform common activites without needing to
#              input commands with a keyboard. This is useful in mouse-only
#              environments, such as when the keyboard is unavailable in a
#              laptop with tablet capabilities like the Thinkpad X220 Tablet.

change_brightness()
{
	while true; do
		# This will display the current brightness level
		# before any choice is made by the user.
		# shellcheck disable=SC2086
		mylight $args
		args="$(dmenu -c -i -l 7 -fn 'monospace:size=50' <<- EOF
		-A 5
		-U 5
		-A 1
		-U 1
		-S 100
		-S 2
		*Done*
		EOF
		)"
		[ "$args" = '*Done*' ] || [ "$args" = '' ] && break
	done
}

rotate_screen()
{
	if [ "$#" -eq 0 ]; then
		way="$(dmenu -c -i -l 6 \
			-fn 'monospace:size=50' -p 'Which way?' |
			tr '[:upper:]' '[:lower:]')"
	else
		way="$1"
		shift
	fi

	if [ "$way" = 'toggle' ]; then
		# Rotate the screen to normal if it is not already; if it is,
		# rotate the screen to be inverted.

		current="$(xrandr | grep ' connected' | cut -d' ' -f5)"

		# This xrandr field is either 'left', 'right', or 'inverted'.
		# In normal orientation, nothing is in this field, so the next
		# field, '(normal', is collected.
		case "$current" in
			left|right|inverted) way='normal'   ;;
			*)                   way='inverted' ;;
		esac
	fi

	case "$way" in
		left)     matrix=" 0 -1  1  1  0  0  0  0  1" ;;
		right)    matrix=" 0  1  0 -1  0  1  0  0  1" ;;
		inverted) matrix="-1  0  1  0 -1  1  0  0  1" ;;
		normal)   matrix=" 1  0  0  0  1  0  0  0  1" ;;
		*)        exit 1 ;;
	esac

	# Before rotating the screen, realign touch screen inputs with the
	# new orientation of the screen. If the pen or eraser is not found,
	# then the user (probably just) hasn't touched it to the screen yet in
	# this X session. This check addresses the annoying situation where I
	# flip the screen, then for the first time in the session use the touch
	# pen, which is misaligned, making me waste time rotating the screen
	# over again.

	pen='Wacom ISDv4 E6 Pen Pen (0)'
	eraser='Wacom ISDv4 E6 Pen Eraser (0)'
	for device in "$pen" "$eraser"; do
		# The $matrix string must be split on spaces.
		# shellcheck disable=SC2086
		if ! xinput --set-prop "$device" 'Coordinate Transformation Matrix' $matrix; then
			dunstify -t 5000 -u 2 "Input device $device not found."
			exit 1
		fi
	done

	xrandr -o "$way" || exit $?

}

main()
{
	if [ "$#" -eq 0 ]; then
		item="$(dmenu -c -i -l 20 -fn 'monospace:size=50' \
			-p 'What to do?')"
	else
		item="$1"
		shift
	fi

	[ "$item" = "*Cancel*" ] && exit 0

	case "$item" in
		'Rotate Screen')
			rotate_screen "$@" <<- EOF
			Left
			Right
			Inverted
			Normal
			Toggle
			*Cancel*
			EOF
			;;
		'Change Brightness')
			change_brightness
			;;
		'Kill a Process')
			mykill
			;;
		*)
			# Execute the item as a shell command. There are
			# deliberately no quotes here to parse options and
			# arguments properly.
			$item
			;;
	esac
}

main "$@" << EOF
Rotate Screen
Change Brightness
Kill a Process
xournalpp
firefox
svkbd-en
pavucontrol
*Cancel*
EOF
