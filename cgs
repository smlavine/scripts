#!/bin/sh
# Copyright (c) 2021 Sebastian LaVine <mail@smlavine.com>
# Licensed under the MIT license. See MIT.txt for details.
#
# File:        cgs
# Description: Checks the git statuses of given git repositories. By default,
#              cgs checks the git statuses of all git repositories in the
#              current directory.
# Arguments:   Paths to git repositories to check the status of.

if [ "$#" -eq 0 ]; then
	repos="$(find . -maxdepth 1 -type d)"
	used_find=1
else
	repos="$*"
fi

# note the subshell
for dirpath in $repos; do (
	[ "$dirpath" = . ]  && dirpath="$PWD"
	cd "$dirpath" || exit
	[ -d .git ] || exit

	[ "$used_find" ] && dirpath="$(echo "$dirpath" | xargs basename)"

	status="$(git -c color.status=always status -sb)"

	# If status has two lines of output, then that means that there is tracking
	# info and repository information. I don't want to output tracking info
	# *unless* the branch is ahead/behind what is behind tracked, which can
	# be detected by the second statement grepping for ']$'.
	# TODO: What if a repository has work on it but doesn't have a remote?
	[ "$(echo "$status" | wc -l)" -ge 2 ] && echo "$dirpath $status" && exit
	echo "$status" | grep -q ']$' && echo "$dirpath $status" && exit

) done
